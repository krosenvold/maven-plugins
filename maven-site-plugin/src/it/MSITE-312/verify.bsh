
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import org.codehaus.plexus.util.*;

boolean result = true;

try
{
    final File parentDirectory = new File( basedir, "target/site" );
    if ( !parentDirectory.exists() || !parentDirectory.isDirectory() )
    {
        System.err.println( "parent is missing or not a directory." );
        return false;
    }

    File parentIndex = new File( parentDirectory, "index.html" );
    if ( !parentIndex.exists() || parentIndex.isDirectory() )
    {
        System.err.println( "no index file in parent or is a directory." );
        return false;
    }

    String content = FileUtils.fileRead( parentIndex, "UTF-8" );
    int index1 = content.indexOf( "<a href=\"./\" title=\"Parent\">Parent</a>" );
    int index2 = content.indexOf( "<a href=\"inherited/parent\" title=\"parent\">parent</a>" );
    int index3 = content.indexOf( "<a href=\"inherited/${childprop}\" title=\"${childprop}\">${childprop}</a>" );

    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "parent index.html has wrong menu items!" );
        return false;
    }

    final File childDirectory = new File( basedir, "child/target/site" );
    if ( !childDirectory.exists() || !childDirectory.isDirectory() )
    {
        System.err.println( "child is missing or not a directory." );
        return false;
    }

    File childIndex = new File( childDirectory, "index.html" );
    if ( !childIndex.exists() || childIndex.isDirectory() )
    {
        System.err.println( "no index file in child or is a directory." );
        return false;
    }

    content = FileUtils.fileRead( childIndex, "UTF-8" );
    int index1 = content.indexOf( "<a href=\"../\" title=\"Parent\">Parent</a>" );
    int index2 = content.indexOf( "<a href=\"inherited/parent\" title=\"parent\">parent</a>" );
    int index3 = content.indexOf( "<a href=\"inherited/${childprop}\" title=\"${childprop}\">${childprop}</a>" );

    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "child index.html has wrong menu items in inherited menu!" );
        return false;
    }

    index1 = content.indexOf( "<a href=\"./\" title=\"Child\">Child</a>" );
    index2 = content.indexOf( "<a href=\"local/parent\" title=\"parent\">parent</a>" );
    index3 = content.indexOf( "<a href=\"local/child\" title=\"child\">child</a>" );

    if ( index1 < 0 || index2 < 0 || index3 < 0 )
    {
        System.err.println( "child index.html has wrong menu items in child menu!" );
        return false;
    }
}
catch ( IOException e )
{
    e.printStackTrace();
    result = false;
}

return result;
